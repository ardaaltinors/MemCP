# =============================================================================
# Improved Nginx Configuration for Better Stability
# =============================================================================

worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Connection settings
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 60;
    send_timeout 60;
    
    # Buffer settings to prevent memory issues
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 16M;
    large_client_header_buffers 4 16k;
    
    # Rate limiting zones with larger memory allocation
    limit_req_zone $binary_remote_addr zone=api_limit:20m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=general_limit:20m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=mcp_limit:20m rate=30r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:20m;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Logging
    access_log /var/log/nginx/access.log main buffer=16k;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Hide nginx version
    server_tokens off;

    # Upstream definitions with health checks
    upstream backend_api {
        server memory-mcp:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream mcp_server {
        server memory-mcp:4200 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Connection limits per IP
        limit_conn addr 50;

        # Security: Disable access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # API proxy with improved error handling
        location /api/ {
            # More generous rate limiting
            limit_req zone=api_limit burst=30 nodelay;
            limit_req_status 429;
            
            # Remove /api prefix and proxy to backend
            rewrite ^/api/(.*)$ /$1 break;
            
            # Proxy settings
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            
            # Connection reuse
            proxy_set_header Connection "";
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increased timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_timeout 10s;
            proxy_next_upstream_tries 2;
        }

        # MCP server proxy
        location /mcp/ {
            # More generous rate limiting
            limit_req zone=mcp_limit burst=20 nodelay;
            limit_req_status 429;
            
            # Proxy settings for MCP server
            proxy_pass http://mcp_server;
            proxy_http_version 1.1;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Increased timeouts for long-running operations
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # HTML files - short cache
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }

        # Main application routing
        location / {
            # More generous rate limiting
            limit_req zone=general_limit burst=100 nodelay;
            limit_req_status 429;
            
            try_files $uri $uri/ $uri.html /index.html;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        # Return JSON for API errors
        location @api_error {
            default_type application/json;
            return 503 '{"error": "Service temporarily unavailable", "status": 503}';
        }
    }
    
    # WebSocket upgrade map
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
}