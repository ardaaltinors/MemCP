---
import { Logo } from "@static/images";
---

<header class="absolute w-full p-4 md:p-8 z-10">
    <div class="mx-auto max-w-6xl px-2 md:px-0">
        <div class="flex items-center justify-between">
            <a href="/" class="flex items-center">
                <img src={Logo.src} alt="MemCP" class="h-16 md:h-20 w-auto" />
                <span class="text-lg md:text-xl font-semibold text-white ml-2">MemCP</span>
            </a>
            
            <nav class="flex items-center space-x-4 md:space-x-8">
                <a href="https://github.com/ardaaltinors/MemCP" target="_blank" rel="noopener noreferrer" class="text-white hover:text-gray-300 transition-colors duration-200" title="GitHub">
                    <svg class="w-6 h-6 md:w-7 md:h-7" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                </a>
                
                <!-- Auth Navigation - Hidden by default, shown/hidden via JavaScript -->
                <div id="auth-nav" class="flex items-center space-x-4 md:space-x-8">
                    <!-- Not Authenticated -->
                    <a id="login-btn" href="/login" class="bg-white text-gray-900 px-4 py-2 md:px-6 md:py-2 rounded-lg hover:bg-gray-100 transition-colors duration-200 font-medium text-sm md:text-base">
                        Login
                    </a>
                    
                    <!-- Authenticated -->
                    <div id="authenticated-nav" class="hidden flex items-center space-x-4">
                        <a href="/dashboard" class="text-white hover:text-gray-300 transition-colors duration-200 font-medium text-sm md:text-base">
                            Dashboard
                        </a>
                        <button id="logout-btn" class="bg-red-600 text-white px-4 py-2 md:px-6 md:py-2 rounded-lg hover:bg-red-700 transition-colors duration-200 font-medium text-sm md:text-base">
                            Logout
                        </button>
                    </div>
                </div>
            </nav>
        </div>
    </div>
</header>

<script>
    // Auth utility functions (inline to avoid extra imports)
    const authUtils = {
        getToken: () => localStorage.getItem('authToken'),
        getTokenExpiry: () => localStorage.getItem('tokenExpiry'),
        isAuthenticated: () => {
            const token = authUtils.getToken();
            const expiry = authUtils.getTokenExpiry();
            
            if (!token || !expiry) return false;
            
            const expiryDate = new Date(expiry);
            const now = new Date();
            
            return expiryDate > now;
        },
        clearAuth: () => {
            localStorage.removeItem('authToken');
            localStorage.removeItem('tokenType');
            localStorage.removeItem('tokenExpiry');
        }
    };

    // Update navigation based on auth state
    function updateNavigation() {
        const loginBtn = document.getElementById('login-btn');
        const authenticatedNav = document.getElementById('authenticated-nav');
        
        if (!loginBtn || !authenticatedNav) return;
        
        const isAuthenticated = authUtils.isAuthenticated();
        
        if (isAuthenticated) {
            loginBtn.style.display = 'none';
            authenticatedNav.style.display = 'flex';
            authenticatedNav.classList.remove('hidden');
        } else {
            loginBtn.style.display = 'block';
            authenticatedNav.style.display = 'none';
            authenticatedNav.classList.add('hidden');
        }
    }

    // Handle logout
    function handleLogout() {
        authUtils.clearAuth();
        updateNavigation();
        window.location.href = '/';
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', () => {
        updateNavigation();
        
        // Add logout handler
        const logoutBtn = document.getElementById('logout-btn');
        if (logoutBtn) {
            logoutBtn.addEventListener('click', handleLogout);
        }
        
        // Check auth state periodically (every 30 seconds)
        setInterval(updateNavigation, 30000);
    });

    // Also run immediately for faster initial render
    updateNavigation();
</script> 